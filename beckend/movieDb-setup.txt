-- Nollställ databasen (ta bort tabeller i rätt ordning)

DROP TABLE IF EXISTS movieActors;
DROP TABLE IF EXISTS movieGenres;
DROP TABLE IF EXISTS movies;
DROP TABLE IF EXISTS actors;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS directors;

-- Skapa databasen om den inte redan finns

CREATE DATABASE IF NOT EXISTS movieDb;
USE movieDb;

-- Skapa tabeller

-- Tabell för regissörer
CREATE TABLE directors (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    birthYear SMALLINT
);

-- Tabell för filmer
CREATE TABLE movies (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(100) NOT NULL,
    releaseYear SMALLINT NOT NULL,
    directorId INT,
    FOREIGN KEY (directorId) REFERENCES directors(id) ON DELETE SET NULL
);

-- Tabell för genrer
CREATE TABLE genres (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL UNIQUE
);

-- Tabell för skådespelare
CREATE TABLE actors (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    birthYear SMALLINT
);

-- Tabell för koppling mellan filmer och genrer (många-till-många)
CREATE TABLE movieGenres (
    movieId INT,
    genreId INT,
    PRIMARY KEY (movieId, genreId),
    FOREIGN KEY (movieId) REFERENCES movies(id) ON DELETE CASCADE,
    FOREIGN KEY (genreId) REFERENCES genres(id) ON DELETE CASCADE
);

-- Tabell för koppling mellan filmer och skådespelare (många-till-många)
CREATE TABLE movieActors (
    movieId INT,
    actorId INT,
    PRIMARY KEY (movieId, actorId),
    FOREIGN KEY (movieId) REFERENCES movies(id) ON DELETE CASCADE,
    FOREIGN KEY (actorId) REFERENCES actors(id) ON DELETE CASCADE
);
-- Skapa index

CREATE INDEX idxMovieGenres ON movieGenres(movieId, genreId);
CREATE INDEX idxMovieActors ON movieActors(movieId, actorId);

-- Lägg in exempeldata

-- Regissörer
INSERT INTO directors (name, birthYear) VALUES
('Christopher Nolan', 1970),
('Martin Scorsese', 1942),
('Steven Spielberg', 1946),
('Quentin Tarantino', 1963);

-- Filmer
INSERT INTO movies (title, releaseYear, directorId) VALUES
('Inception', 2010, 1),
('Goodfellas', 1990, 2),
('Raiders of the Lost Ark', 1981, 3),
('Inglorious Basterds', 2009, 4),
('The Dark Knight', 2008, 1);

-- Genrer
INSERT INTO genres (name) VALUES
('Action'),
('Comedy'),
('Drama'),
('Horror'),
('Thriller');

-- Skådespelare
INSERT INTO actors (name, birthYear) VALUES
('Leonardo DiCaprio', 1974),
('Robert De Niro', 1943),
('Harrison Ford', 1942),
('Brad Pitt', 1963);

-- Koppla filmer till genrer

INSERT INTO movieGenres (movieId, genreId) VALUES
(1, 1), -- Inception -> Action
(1, 3), -- Inception -> Drama
(2, 3), -- Goodfellas -> Drama
(3, 1), -- Raiders -> Action
(4, 1), -- Inglorious -> Action
(4, 3), -- Inglorious -> Drama
(5, 5); -- The Dark Knight -> Thriller

-- Koppla filmer till skådespelare

INSERT INTO movieActors (movieId, actorId) VALUES
(1, 1), -- Inception -> Leonardo
(2, 2), -- Goodfellas -> Robert
(3, 3), -- Raiders -> Harrison
(4, 4), -- Inglorious -> Brad
(5, 1); -- Dark Knight -> Leonardo igen

-- Visa en snygg sammanställning

SELECT
    m.id AS movieId,
    m.title,
    m.releaseYear,
    d.name AS directorName,
    GROUP_CONCAT(DISTINCT g.name) AS genres,
    GROUP_CONCAT(DISTINCT a.name) AS actors
FROM movies m
LEFT JOIN directors d ON m.directorId = d.id
LEFT JOIN movieGenres mg ON m.id = mg.movieId
LEFT JOIN genres g ON mg.genreId = g.id
LEFT JOIN movieActors ma ON m.id = ma.movieId
LEFT JOIN actors a ON ma.actorId = a.id
GROUP BY m.id, m.title, m.releaseYear, d.name;
